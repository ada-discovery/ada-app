# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
application.secret="9Bjt]9lSqPnfXPd5e;ign/wgsm[]R;`uGP<frI5^rhvJR:ZbJC_hr`Si=cMwutA2"

app.version = 0.3.1-alpha

# The application languages
# ~~~~~
play.i18n.langs=["en"]

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoModule"
play.modules.enabled += "persistence.RepoModule"
play.modules.enabled += "services.ServiceModule"
play.modules.enabled += "controllers.ControllerModule"

# declare and expose deadbolt modules
play.modules.enabled += "be.objectify.deadbolt.scala.DeadboltModule"
play.modules.enabled += "modules.DeadboltHook"

# mongodb.uri ="mongodb://username:password@localhost:27017/test"
mongodb.db = "ncer"
mongodb.host = "localhost:27017"
mongodb.host = ${?ADA_DB_HOST}
# mongodb.uri ="mongodb://"${mongodb.host}"/"${mongodb.db}"?connectTimeoutMS=30000&socketTimeoutMS=30000&rm.keepAlive=true"
mongodb.uri ="mongodb://"${mongodb.host}"/"${mongodb.db}"?connectTimeoutMS=30000&rm.keepAlive=true"
# mongodb.uri ="mongodb://"${mongodb.host}"/"${mongodb.db}

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=DEBUG

# Logger provided to your application:
logger.application=DEBUG

mongo-async-driver {
  akka {
    loglevel = INFO
  }
}

include "deadbolt.conf"
deadbolt.scala.view-timeout=20000

//play.ws.ning.allowPoolingConnection=true
//play.ws.ning.idleConnectionInPoolTimeout=10000

redcap.prodserver.api.url = "https://pd-redcap.uni.lu/redcap/api/"
redcap.prodserver.url = "https://pd-redcap.uni.lu/redcap/"
redcap.prodserver.token = "AEE7196B0A33882F29B47FA67C0CF2DD"

redcap.testserver.api.url = "http://212.69.168.211/~hacettpe/redcap/api/"
redcap.testserver.url = "http://212.69.168.211/~hacettpe/redcap"
redcap.testserver.token = "1590C6F4175625F95711F266B2C9AB08"

synapse.api.rest.url = "https://repo-prod.prod.sagebase.org/"
synapse.api.login.url = "auth/v1/login"
synapse.api.session.url = "auth/v1/session"
synapse.api.table_csv_download_start.url.part1 = "repo/v1/entity/"
synapse.api.table_csv_download_start.url.part2 = "/table/download/csv/async/start"
synapse.api.table_csv_download_result.url.part1 = "repo/v1/entity/"
synapse.api.table_csv_download_result.url.part2 = "/table/download/csv/async/get/"
synapse.api.file_handle.url = "file/v1/fileHandle/"
synapse.api.file_download.url.part1 = "file/v1/fileHandle/"
synapse.api.file_download.url.part2 = "/url"
synapse.api.table_column_models.url.part1 = "repo/v1/entity/"
synapse.api.table_column_models.url.part2 = "/column"
synapse.api.column_file_handles.url.part1 = "repo/v1/entity/"
synapse.api.column_file_handles.url.part2 = "/table/filehandles"
synapse.api.file_column_download.url.part1 = "repo/v1/entity/"
synapse.api.file_column_download.url.part2 = "/table/column/"
synapse.api.file_column_download.url.part3 = "/row/"
synapse.api.file_column_download.url.part4 = "/version/"
synapse.api.file_column_download.url.part5 = "/file"

synapse.api.bulk_download_start.url = "file/v1/file/bulk/async/start"
synapse.api.bulk_download_result.url = "file/v1/file/bulk/async/get/"

synapse.api.username = ${ADA_SYNAPSE_USERNAME}
synapse.api.password = ${ADA_SYNAPSE_PASSWORD}

denopa.url = "http://www.denopa.de"
ppmi.url = "http://www.ppmi-info.org"

mpower.url = "http://parkinsonmpower.org"
mpower.app.url = "http://10.79.2.211:8080"
icgc.url = "https://icgc.org"

fnr.url = "http://www.fnr.lu"
chl.url = "https://www.chl.lu"
lih.url = "https://www.lih.lu"
ibbl.url = "http://www.ibbl.lu"
lcsb.url = "http://wwwen.uni.lu/lcsb"

denopa.import.folder = "/home/peter.banda/Data/DeNoPa/final/"
denopa.translation.import.folder = "/home/peter.banda/Data/DeNoPa/translations/"
ibbl.import.folder = "/home/peter.banda/Data/IBBL/"
datasetimport.import.folder = "/home/peter.banda/Data/imports/"

//denopa.import.folder = "/home/peter/Data/DeNoPa/final/"
//denopa.translation.import.folder = "/home/peter/Data/DeNoPa/translations/"
//ibbl.import.folder = "/home/peter/Data/IBBL/"
//datasetimport.import.folder = "/home/peter/Data/imports/"

play.http.parser.maxDiskBuffer=1024MB

play.ws.timeout.request=180000
play.ws.timeout.idle=180000
play.ws.timeout.connection=180000

# ldap
include "ldap.conf"

# mail setup
# not pushed to repo
include "mail.conf"

