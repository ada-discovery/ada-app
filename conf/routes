# Routes

->          /                                 core.Routes
->          /pdChallenge                      pdchallenge.Routes

#RC predictions (to remove)
GET         /admin/showRCPrediction           controllers.ml.RCPredictionController.showRCPrediction
POST        /admin/runRCPrediction            controllers.ml.RCPredictionController.runRCPrediction

# Item requests
GET         /requests/items/select             controllers.requests.BatchOrderRequestsController.select(id: Option[BSONObjectID]?= None, dataSetId: String, p: Int ?= 0, s: String ?= "-timeCreated", filter: Seq[org.incal.core.FilterCondition] ?= Nil, filterOrId: Either[Seq[org.incal.core.FilterCondition], BSONObjectID] ?= Left(Nil))
GET         /requests                          controllers.requests.BatchOrderRequestsController.find(p: Int ?= 0, s: String ?= "-timeCreated", filter: Seq[org.incal.core.FilterCondition] ?= Nil)
GET         /requests/active                   controllers.requests.BatchOrderRequestsController.findActive(p1: Option[Int] ?= None, p2: Option[Int] ?= None, s: String ?= "-timeCreated", filter: Seq[org.incal.core.FilterCondition] ?= Nil)
GET         /requests/all                      controllers.requests.BatchOrderRequestsController.listAll(s: String ?= "original")
GET         /requests/new                      controllers.requests.BatchOrderRequestsController.create
POST        /requests/save                     controllers.requests.BatchOrderRequestsController.save
GET         /requests/:id/get                  controllers.requests.BatchOrderRequestsController.get(id: BSONObjectID)
GET         /requests/:id/edit                 controllers.requests.BatchOrderRequestsController.edit(id: BSONObjectID)
GET         /requests/:id/action               controllers.requests.BatchOrderRequestsController.action(id: BSONObjectID, role: models.Role.Value)
POST        /requests/:id                      controllers.requests.BatchOrderRequestsController.update(id: BSONObjectID)
POST        /requests/:id/delete               controllers.requests.BatchOrderRequestsController.delete(id: BSONObjectID)
POST        /requests/:id/items/add            controllers.requests.BatchOrderRequestsController.addItemsToRequest(id: BSONObjectID, dataSetId: String, items: Seq[String])
POST        /requests/:id/performAction        controllers.requests.BatchOrderRequestsController.performAction(id: BSONObjectID, action: models.RequestAction.Value, role: models.Role.Value, desc: String)


# Requests Settingd
GET         /requestSettings                   controllers.requestSetting.RequestSettingController.find(p: Int ?= 0, s: String ?= "-timeCreated", filter: Seq[org.incal.core.FilterCondition] ?= Nil)
GET         /requestSettings/all               controllers.requestSetting.RequestSettingController.listAll(s: String ?= "original")
GET         /requestSettings/new               controllers.requestSetting.RequestSettingController.create
POST        /requestSettings/save              controllers.requestSetting.RequestSettingController.save
GET         /requestSettings/:id/get           controllers.requestSetting.RequestSettingController.get(id: BSONObjectID)
GET         /requestSettings/:id/edit          controllers.requestSetting.RequestSettingController.edit(id: BSONObjectID)
POST        /requestSettings/:id               controllers.requestSetting.RequestSettingController.update(id: BSONObjectID)
POST        /requestSettings/:id/delete        controllers.requestSetting.RequestSettingController.delete(id: BSONObjectID)